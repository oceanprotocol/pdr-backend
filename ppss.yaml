# (web3_pp / network settings is at bottom, because it's long)
lake_ss:
  parquet_dir: parquet_data
  feeds:
    - binance BTC/USDT ETH/USDT 5m
  #    - binance BTC/USDT ETH/USDT BNB/USDT XRP/USDT ADA/USDT DOGE/USDT SOL/USDT LTC/USDT TRX/USDT DOT/USDT 5m
  #    - kraken BTC/USDT 5m
  st_timestr: 2023-06-01_00:00 # starting date for data
  fin_timestr: now # ending date for data

predictoor_ss:
  predict_feed: binance BTC/USDT c 5m
  approach: 2 # 1->50/50; 2->model-based
  stake_amount: 100 # How much your bot stakes. In OCEAN per epoch, per feed

  sim_only:
    others_stake: 10000 # How much all others' bots stake. In OCEAN per epoch, per feed. Calcs: stake volume = 10e6 $/day/20_feeds = 34700 $/epoch/20_feeds (bc 288 5m epochs/day) = 1735 $/epoch/feed = 2313 OCEAN/epoch/feed (at 1 OCEAN=$0.75)
    others_accuracy: 0.50001 # What percent of others' bots stake is correct. Value in range 0.0-1.0. 0.50001 means mostly 50-50 stake and some small fry predicting a bit accurately
    revenue: 0.93006 # Sales revenue going towards predictoors. In OCEAN per epoch, per feed. Calcs: 37500 OCEAN/week/20_feeds (Predictoor DF rewards) = 18.6012 OCEAN/epoch/20_feeds (bc 2016 5m epochs/week) = 0.93006 OCEAN/epoch/feed

  bot_only:
    s_until_epoch_end: 60 # in s. Start predicting if there's > this time left
    s_start_payouts: 220 # in s. Run payout when there's this seconds left, set to 0 to disable
    s_cutoff: 20 # in s. Stop predicting if there's < this time left

  aimodel_ss:
    input_feeds:
      - binance BTC/USDT ETH/USDT c 5m
    max_n_train: 5000 # no. epochs to train model on
    autoregressive_n: 1 # no. epochs that model looks back, to predict next
    approach: LinearLogistic # LinearLogistic | LinearSVC | Constant
    weight_recent: 10x_5x # 10x_5x | None
    balance_classes: None # SMOTE | RandomOverSampler | None
    calibrate_probs: CalibratedClassifierCV_5x # CalibratedClassifierCV_5x | None

trader_ss:
  feed: binance BTC/USDT c 5m
  sim_only:
    buy_amt: 1000 USD # buy this amount in each epoch
    fee_percent: 0.0 # simulated % fee
    init_holdings:
      - 100000 USDT
      - 2 BTC
  bot_only:
    min_buffer: 30 # in s. only trade if there's > this time left
    max_tries: 10 # max no. attempts to process a feed
    position_size: 3 # buy/sell this amount in each epoch
  exchange_only:
    timeout: 30000
    options:
      createMarketBuyOrderRequiresPrice": False
      defaultType: spot

sim_ss: # sim only
  do_plot: True
  log_dir: logs
  test_n: 5000 # number of epochs to simulate
  exchange_only:
    timeout: 30000
    options:
      createMarketBuyOrderRequiresPrice": False
      defaultType: spot

multisim_ss:
  approach: SimpleSweep # SimpleSweep | FastSweep (future) | ..
  sweep_params:
  - predictoor_ss.aimodel_ss.max_n_train: 500, 1000, 1500 
  - predictoor_ss.aimodel_ss.autoregressive_n: 1, 2
  - predictoor_ss.aimodel_ss.balance_classes: None, SMOTE
#  - predictoor_ss.aimodel_ss.input_feeds:
#   - [1]
#     - binance BTC/USDT c 5m
#   - [2]
#     - binance BTC/USDT ETH/USDT c 5m
#   - [3]
#     - binance BTC/USDT c 5m
#     - kraken BTC/USDT c 5m
  - trader_ss.buy_amt: 1000 USD, 2000 USD
  

# ------------------------------------------------------------------
# Bots run by OPF

publisher_ss:
  sapphire-mainnet:
    fee_collector_address: 0x0000000000000000000000000000000000000000
    feeds:
      - binance BTC/USDT ETH/USDT BNB/USDT XRP/USDT ADA/USDT DOGE/USDT SOL/USDT LTC/USDT TRX/USDT DOT/USDT c 5m,1h
  sapphire-testnet:
    fee_collector_address: 0x0000000000000000000000000000000000000000
    feeds:
      - binance BTC/USDT ETH/USDT BNB/USDT XRP/USDT ADA/USDT DOGE/USDT SOL/USDT LTC/USDT TRX/USDT DOT/USDT c 5m,1h
  development:
    fee_collector_address: 0x0000000000000000000000000000000000000000
    feeds:
      - binance BTC/USDT ETH/USDT XRP/USDT c 5m

trueval_ss:
  feeds:
    - binance BTC/USDT 5m
  #    - binance BTC/USDT ETH/USDT BNB/USDT XRP/USDT ADA/USDT DOGE/USDT SOL/USDT LTC/USDT TRX/USDT DOT/USDT 5m
  #    - kraken BTC/USDT 5m
  batch_size: 30
  sleep_time: 30

dfbuyer_ss:
  feeds:
    - binance BTC/USDT 5m
  #    - binance BTC/USDT ETH/USDT BNB/USDT XRP/USDT ADA/USDT DOGE/USDT SOL/USDT LTC/USDT TRX/USDT DOT/USDT 5m
  #    - kraken BTC/USDT 5m
  batch_size: 20
  consume_interval_seconds: 86400
  weekly_spending_limit: 37000

payout_ss:
  batch_size: 250

topup_ss:
  addresses:
    - opf_addresses
#    - 0xabcd...
#  min_bal: 20
#  topup_bal: 30

# ------------------------------------------------------------------
# Network settings

web3_pp:
  sapphire-testnet:
    address_file: "~/.ocean/ocean-contracts/artifacts/address.json"
    rpc_url: https://testnet.sapphire.oasis.dev
    subgraph_url: https://v4.subgraph.sapphire-testnet.oceanprotocol.com/subgraphs/name/oceanprotocol/ocean-subgraph
    owner_addrs: "0xe02a421dfc549336d47efee85699bd0a3da7d6ff" # OPF deployer address

  sapphire-mainnet:
    address_file: "~/.ocean/ocean-contracts/artifacts/address.json"
    rpc_url: https://sapphire.oasis.io
    subgraph_url: https://v4.subgraph.sapphire-mainnet.oceanprotocol.com/subgraphs/name/oceanprotocol/ocean-subgraph
    owner_addrs: "0x4ac2e51f9b1b0ca9e000dfe6032b24639b172703" # OPF deployer address

  development:
    address_file: "~/.ocean/ocean-contracts/artifacts/address.json"
    rpc_url: http://localhost:8545
    subgraph_url: http://localhost:9000/subgraphs/name/oceanprotocol/ocean-subgraph
    owner_addrs: "0xe2DD09d719Da89e5a3D0F2549c7E24566e947260" # OPF deployer address. Taken from ocean.py setup-local.md FACTORY_DEPLOYER_PRIVATE_KEY

  development2:
    address_file: "~/barge-pytest.address.json"
    private_key: "0xc594c6e5def4bab63ac29eed19a134c130388f74f019bc74b8f4389df2837a58"
    rpc_url: http://74.234.16.165:8545
    subgraph_url: http://74.234.16.165:9000/subgraphs/name/oceanprotocol/ocean-subgraph
    owner_addrs: "0xe2DD09d719Da89e5a3D0F2549c7E24566e947260" # OPF deployer address. Taken from ocean.py setup-local.md FACTORY_DEPLOYER_PRIVATE_KEY

  barge-predictoor-bot:
    address_file: "~/barge-predictoor-bot.address.json"
    private_key: "0xc594c6e5def4bab63ac29eed19a134c130388f74f019bc74b8f4389df2837a58" # address is 0xe2DD...
    rpc_url: http://4.245.224.119:8545 # from VPS
    subgraph_url: http://4.245.224.119:9000/subgraphs/name/oceanprotocol/ocean-subgraph # from VPS
    owner_addrs: "0xe2DD09d719Da89e5a3D0F2549c7E24566e947260" # OPF deployer address. Taken from ocean.py setup-local.md FACTORY_DEPLOYER_PRIVATE_KEY

  barge-pytest:
    address_file: "~/barge-pytest.address.json"
    private_key: "0xc594c6e5def4bab63ac29eed19a134c130388f74f019bc74b8f4389df2837a58"
    rpc_url: http://74.234.16.165:8545
    subgraph_url: http://74.234.16.165:9000/subgraphs/name/oceanprotocol/ocean-subgraph
    owner_addrs: "0xe2DD09d719Da89e5a3D0F2549c7E24566e947260" # OPF deployer address. Taken from ocean.py setup-local.md FACTORY_DEPLOYER_PRIVATE_KEY

deployment_configs:
  testnet_predictoor_deployment:
    cpu: "1"
    memory: "512Mi"
    source: "binance"
    type: "predictoor"
    approach: 3
    network: "sapphire-testnet"
    s_until_epoch_end: 20
    pdr_backend_image_source: "oceanprotocol/pdr-backend:latest"
    agents:
      - pair: "BTC/USDT"
        stake_amt: 0.1
        timeframe: 5m
        approach: 1
      - pair: "ETH/USDT"
        stake_amt: 1
        timeframe: 1h
        s_until_epoch_end: 100
