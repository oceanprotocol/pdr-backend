# (web3_pp / network settings is at bottom, because it's long)
lake_ss:
  parquet_dir: parquet_data
  feeds:
    - binance BTC/USDT 1h
#    - binance BTC/USDT ETH/USDT BNB/USDT XRP/USDT ADA/USDT DOGE/USDT SOL/USDT LTC/USDT TRX/USDT DOT/USDT 1h
#    - kraken BTC/USDT 1h
  st_timestr: 2023-06-01_00:00 # starting date for data
  fin_timestr: now # ending date for data

predictoor_ss:
  predict_feed: binance BTC/USDT c 1h
  bot_only:
    s_until_epoch_end: 60 # in s. Start predicting if there's > this time left
    stake_amount: 1 # stake this amount with each prediction. In OCEAN
  approach3:
  aimodel_ss:
    input_feeds:
      - binance BTC/USDT c 1h
#      - binance BTC/USDT ETH/USDT BNB/USDT XRP/USDT ADA/USDT DOGE/USDT SOL/USDT LTC/USDT TRX/USDT DOT/USDT ohlcv 1h
#    - kraken BTC/USDT 1h
    max_n_train: 5000 # no. epochs to train model on
    autoregressive_n : 10 # no. epochs that model looks back, to predict next
    approach: LIN

trader_ss:
  feed: binance BTC/USDT c 1h
  xpmt_only:
    buy_amt: 10 USD # buy this amount in each epoch
    fee_percent: 0.0 # simulated % fee
    init_holdings:
      - 100000 USDT
      - 0 BTC
  bot_only:
    min_buffer: 30 # in s. only trade if there's > this time left
    max_tries: 10 # max no. attempts to process a feed
    position_size: 3 # buy/sell this amount in each epoch

xpmt_ss: # xpmt only
  do_plot: True
  log_dir: logs
  test_n : 200 # number of epochs to simulate

# ------------------------------------------------------------------
# Bots run by OPF

publisher_ss:
  sapphire-mainnet:
    fee_collector_address: 0x0000000000000000000000000000000000000000
    feeds:
      - binance BTC/USDT ETH/USDT BNB/USDT XRP/USDT ADA/USDT DOGE/USDT SOL/USDT LTC/USDT TRX/USDT DOT/USDT c 5m,1h
  sapphire-testnet:
    fee_collector_address: 0x0000000000000000000000000000000000000000
    feeds:
      - binance BTC/USDT ETH/USDT BNB/USDT XRP/USDT ADA/USDT DOGE/USDT SOL/USDT LTC/USDT TRX/USDT DOT/USDT c 5m,1h
  development:
    fee_collector_address: 0x0000000000000000000000000000000000000000
    feeds:
      - binance BTC/USDT ETH/USDT XRP/USDT c 5m

trueval_ss:
  feeds:
    - binance BTC/USDT 5m
#    - binance BTC/USDT ETH/USDT BNB/USDT XRP/USDT ADA/USDT DOGE/USDT SOL/USDT LTC/USDT TRX/USDT DOT/USDT 5m
#    - kraken BTC/USDT 5m
  batch_size: 30
  sleep_time: 30

dfbuyer_ss:
  feeds:
    - binance BTC/USDT 5m
#    - binance BTC/USDT ETH/USDT BNB/USDT XRP/USDT ADA/USDT DOGE/USDT SOL/USDT LTC/USDT TRX/USDT DOT/USDT 5m
#    - kraken BTC/USDT 5m
  batch_size: 20
  consume_interval_seconds: 86400
  weekly_spending_limit: 37000

payout_ss:
  batch_size: 250

# ------------------------------------------------------------------
# Network settings


web3_pp:

  sapphire-testnet:
    address_file: "~/.ocean/ocean-contracts/artifacts/address.json"
    rpc_url: https://testnet.sapphire.oasis.dev
    subgraph_url: https://v4.subgraph.sapphire-testnet.oceanprotocol.com/subgraphs/name/oceanprotocol/ocean-subgraph
    owner_addrs: "0xe02a421dfc549336d47efee85699bd0a3da7d6ff" # OPF deployer address

  sapphire-mainnet:
    address_file: "~/.ocean/ocean-contracts/artifacts/address.json"
    rpc_url: https://sapphire.oasis.io
    subgraph_url: https://v4.subgraph.sapphire-mainnet.oceanprotocol.com/subgraphs/name/oceanprotocol/ocean-subgraph
    owner_addrs: "0x4ac2e51f9b1b0ca9e000dfe6032b24639b172703" # OPF deployer address

  development:
    address_file: "~/.ocean/ocean-contracts/artifacts/address.json"
    rpc_url: http://localhost:8545
    subgraph_url: http://localhost:9000/subgraphs/name/oceanprotocol/ocean-subgraph
    owner_addrs: "0xe2DD09d719Da89e5a3D0F2549c7E24566e947260" # OPF deployer address. Taken from ocean.py setup-local.md FACTORY_DEPLOYER_PRIVATE_KEY

  barge-predictoor-bot:
    address_file: "~/barge-predictoor-bot.address.json"
    private_key: "0xc594c6e5def4bab63ac29eed19a134c130388f74f019bc74b8f4389df2837a58" # address is 0xe2DD...
    rpc_url: http://4.245.224.119:8545 # from VPS
    subgraph_url: http://4.245.224.119:9000/subgraphs/name/oceanprotocol/ocean-subgraph # from VPS
    owner_addrs: "0xe2DD09d719Da89e5a3D0F2549c7E24566e947260" # OPF deployer address. Taken from ocean.py setup-local.md FACTORY_DEPLOYER_PRIVATE_KEY

  barge-pytest:
    address_file: "~/barge-pytest.address.json"
    private_key: "0xc594c6e5def4bab63ac29eed19a134c130388f74f019bc74b8f4389df2837a58"
    rpc_url: http://74.234.16.165:8545
    subgraph_url: http://74.234.16.165:9000/subgraphs/name/oceanprotocol/ocean-subgraph
    owner_addrs: "0xe2DD09d719Da89e5a3D0F2549c7E24566e947260" # OPF deployer address. Taken from ocean.py setup-local.md FACTORY_DEPLOYER_PRIVATE_KEY

