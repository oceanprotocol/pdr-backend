#!/usr/bin/env python
import argparse

from dash import Dash, dcc, html

from pdr_dash_plots.callbacks import get_callbacks
from pdr_dash_plots.view_elements import empty_graphs_template
from pdr_dash_plots.util import get_all_run_names

app = Dash(__name__)
app.config["suppress_callback_exceptions"] = True
app.layout = html.Div(
    html.Div(
        [
            html.Div(empty_graphs_template, id="live-graphs"),
            dcc.Interval(
                id="interval-component",
                interval=3 * 1000,  # in milliseconds
                n_intervals=0,
                disabled=False,
            ),
        ]
    )
)

get_callbacks(app)


def validate_run_id(run_id):
    if run_id not in get_all_run_names():
        raise ValueError(f"Invalid run_id: {run_id}")

    return run_id


if __name__ == "__main__":
    parser = argparse.ArgumentParser(
        prog='sim plots',
        description='A script to visualize simulation data generated by pdr sim.',
        epilog='powered by Dash, Plotly, and Flask.'
    )

    parser.add_argument(
        '--run_id',
        help=(
            'The run_id of the simulation to visualize. '
            'If not provided, the latest run_id will be used.'
        ),
        type=validate_run_id
    )

    parser.add_argument(
        '--port',
        nargs='?',
        help='The port to run the server on. Default is 8050.',
        type=int,
        default=8050
    )

    args = parser.parse_args()

    app.run_id = args.run_id
    app.run(debug=True, port=args.port)
